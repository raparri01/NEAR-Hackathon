{
  "version": 3,
  "sources": ["../../../src/services/transactions/transactions.js"],
  "sourcesContent": ["import axios from 'axios'\n\nexport const transactionsForApp = async ({ appName }) => {\n  const res = await axios.get(\n    `https://backend-mainnet-1713.onrender.com/trpc/transaction.listByAccountId?batch=1&input=%7B%220%22%3A%7B%22accountId%22%3A%22${appName}%22%2C%22limit%22%3A9999%2C%22cursor%22%3A%7B%22timestamp%22%3A%221667076711696785617%22%2C%22indexInChunk%22%3A3%7D%7D%7D`\n  )\n  const price = []\n  const tempTransactions = []\n  const transactions = []\n  const items = res?.data[0]?.result?.data?.items || []\n  items.forEach((item) => {\n    if (item?.actions[0].kind === 'transfer') {\n      price.push({\n        value: (\n          item?.actions[0].args.deposit / 1000000000000000000000000\n        ).toFixed(2),\n        timestamp: new Date(item.blockTimestamp).toISOString().slice(0, 10),\n      })\n      tempTransactions.push({\n        value: (\n          item?.actions[0].args.deposit / 1000000000000000000000000\n        ).toFixed(2),\n        timestamp: new Date(item.blockTimestamp).toISOString().slice(0, 10),\n      })\n    }\n  })\n  const transactionsObject = {}\n  tempTransactions.forEach((item) => {\n    transactionsObject[item.timestamp] = transactionsObject[item.timestamp]\n      ? transactionsObject[item.timestamp] + 1\n      : 1\n  })\n  Object.keys(transactionsObject).forEach((key) => {\n    transactions.push({\n      value: transactionsObject[key],\n      timestamp: key,\n    })\n  })\n  return { price: price.reverse(), transactions: transactions.reverse() }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAkB;AAEX,MAAMA,qBAAqB,OAAO;EAAEC;AAAQ,MAAM;;AAAA,MAAA;AACvD,QAAMC,MAAM,MAAMC,aAAAA,QAAMC,IACrB,iIAAgIH,mIAAmI;AAEtQ,QAAMI,QAAQ,CAAA;AACd,QAAMC,mBAAmB,CAAA;AACzB,QAAMC,eAAe,CAAA;AACrB,QAAMC,UAAQN,4CAAKO,KAAK,OAAVP,mBAAcQ,WAAdR,mBAAsBO,SAAtBP,mBAA4BM,UAAS,CAAA;AACnD,sBAAAG,SAAAH,KAAK,EAAA,KAALA,OAAeI,UAAS;AACtB,SAAIA,6BAAMC,QAAQ,GAAGC,UAAS,YAAY;AAAA,UAAA,UAAA;AACxCT,YAAMU,KAAK;QACTC,SACEJ,6BAAMC,QAAQ,GAAGI,KAAKC,WAAU,MAChCC,QAAQ,CAAC;QACXC,eAAW,aAAAC,SAAA,WAAA,IAAIC,KAAKV,KAAKW,cAAc,EAAEC,YAAW,CAAE,EAAA,KAAA,UAAO,GAAG,EAAE;MACpE,CAAC;AACDlB,uBAAiBS,KAAK;QACpBC,SACEJ,6BAAMC,QAAQ,GAAGI,KAAKC,WAAU,MAChCC,QAAQ,CAAC;QACXC,eAAW,aAAAC,SAAA,YAAA,IAAIC,KAAKV,KAAKW,cAAc,EAAEC,YAAW,CAAE,EAAA,KAAA,WAAO,GAAG,EAAE;MACpE,CAAC;IACH;EACF,CAAC;AACD,QAAMC,qBAAqB,CAAC;AAC5B,sBAAAd,SAAAL,gBAAgB,EAAA,KAAhBA,kBAA0BM,UAAS;AACjCa,uBAAmBb,KAAKQ,aAAaK,mBAAmBb,KAAKQ,aACzDK,mBAAmBb,KAAKQ,aAAa,IACrC;EACN,CAAC;AACD,sBAAAT,SAAA,gBAAA,YAAAe,SAAYD,kBAAkB,CAAC,EAAA,KAAA,WAAUE,SAAQ;AAC/CpB,iBAAaQ,KAAK;MAChBC,OAAOS,mBAAmBE;MAC1BP,WAAWO;IACb,CAAC;EACH,CAAC;AACD,SAAO;IAAEtB,WAAO,eAAAuB,SAAAvB,KAAK,EAAA,KAALA,KAAK;IAAYE,kBAAc,eAAAqB,SAAArB,YAAY,EAAA,KAAZA,YAAY;EAAW;AACxE;",
  "names": ["transactionsForApp", "appName", "res", "axios", "get", "price", "tempTransactions", "transactions", "items", "data", "result", "_forEachInstanceProperty", "item", "actions", "kind", "push", "value", "args", "deposit", "toFixed", "timestamp", "_sliceInstanceProperty", "Date", "blockTimestamp", "toISOString", "transactionsObject", "_Object$keys", "key", "_reverseInstanceProperty"]
}
